{"version":3,"sources":["components/landingpage.js","components/contact.js","components/main.js","App.js","serviceWorker.js","index.js","components/base_c.png"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","require","alt","href","rel","target","aria-hidden","Component","Contact","Main","Switch","Route","exact","path","component","window","location","App","title","scroll","Link","to","main","Boolean","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4NA6DeA,mLAvDX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAU,eACdP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACTR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,OACEO,IAAKC,EAAQ,IACbC,IAAI,SACJJ,UAAU,gBAIdP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,4DAEAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UAEbP,EAAAC,EAAAC,cAAA,KACEU,KAAK,sDACLC,IAAI,sBACJC,OAAO,UAEPd,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwBQ,cAAY,UAKnDf,EAAAC,EAAAC,cAAA,KACEU,KAAK,mCACLC,IAAI,sBACJC,OAAO,UAEPd,EAAAC,EAAAC,cAAA,KAAGK,UAAU,eAAeQ,cAAY,UAI1Cf,EAAAC,EAAAC,cAAA,KACEU,KAAK,kCACLC,IAAI,sBACJC,OAAO,UAEPd,EAAAC,EAAAC,cAAA,KAAGK,UAAU,gBAAgBQ,cAAY,uBA7CnCC,aCQXC,mLART,OACAjB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCAJgBc,aCiBPE,EAbF,kBACXlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjCC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEE,KAAK,YACLC,UAAW,kBACRC,OAAOC,SAAW,yCAGvBzB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWN,eC0CvBS,0LA5CX,OACE1B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAACI,EAAA,OAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAU,aAAaoB,MAAM,IAAIC,QAAM,GAC7C5B,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAAA,KACEY,OAAO,SACPD,IAAI,sBACJD,KAAK,uCAHP,YAOAZ,EAAAC,EAAAC,cAAA,KACEY,OAAO,SACPD,IAAI,sBACJD,KAAK,sFAHP,UAOAZ,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,KAAT,WAGJ9B,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQqB,MAAM,aACZ3B,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAAA,KACEY,OAAO,SACPD,IAAI,sBACJD,KAAK,uCAHP,YAOAZ,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,KAAT,WAGJ9B,EAAAC,EAAAC,cAACI,EAAA,QAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACfP,EAAAC,EAAAC,cAAC6B,EAAD,gBAtCMf,cCCEgB,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,wECXNC,IAASC,OACPpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACArC,EAAAC,EAAAC,cAACoC,EAAD,OACkBC,SAASC,eAAe,SDuHtC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,6FEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.315dd117.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\n//import avatar from './download.png';\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Grid className=\"landingpage\">\r\n          <Cell col={12}>\r\n            <div className=\"avatar-block\">\r\n              <img\r\n                src={require(\"./base_c.png\")}\r\n                alt=\"avatar\"\r\n                className=\"avatar-img\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"text-box\">\r\n              <div className=\"banner-text\">\r\n                <h1>Developer</h1>\r\n                <p>Python | Javascript | NodeJS | React | CSS/HTML</p>\r\n\r\n                <div className=\"social\">\r\n                  {/* linkedin*/}\r\n                  <a\r\n                    href=\"https://www.linkedin.com/in/anupam-kumar-42a479128/\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                  </a>\r\n\r\n                  {/* Github*/}\r\n\r\n                  <a\r\n                    href=\"https://github.com/thejoulethief\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fa fa-github\" aria-hidden=\"true\" />\r\n                  </a>\r\n\r\n                  {/* Twitter*/}\r\n                  <a\r\n                    href=\"https://twitter.com/quadraquark\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    render(){\r\n      return (\r\n      <div>\r\n      <h1>Contact Page</h1>\r\n      </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport LandingPage from \"./landingpage\";\r\nimport Contact from \"./contact\";\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={LandingPage} />\r\n    <Route\r\n      path=\"/projects\"\r\n      component={() =>\r\n        (window.location = \"http://www.github.com/thejoulethief\")\r\n      }\r\n    />\r\n    <Route path=\"/contact\" component={Contact} />\r\n  </Switch>\r\n);\r\n\r\nexport default Main;\r\n","//MDL\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\n\nimport React, { Component } from \"react\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\nimport Main from \"./components/main\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className=\"header-nav\" title=\" \" scroll>\n            <Navigation>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://www.github.com/thejoulethief\"\n              >\n                Projects\n              </a>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://drive.google.com/file/d/1MGnLrEALjSVEt9voPcU8XMqqtL2jrbAJ/view?usp=sharing\"\n              >\n                Resume\n              </a>\n              <Link to=\"/\">About</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Portfolio\">\n            <Navigation>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://www.github.com/thejoulethief\"\n              >\n                Projects\n              </a>\n              <Link to=\"/\">About</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/base_c.c738e5ce.png\";"],"sourceRoot":""}